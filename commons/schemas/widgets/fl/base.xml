<?xml version="1.0"?><component ns="fl" name="base" type="node"><description>Base element to provide basic props/computed for all those which are derived from `fltk_widget`</description><fields><item name="mixin" alias="mixin" type="cstr" is-prop="true" is-computed="false">Apply mixins to this object</item><item name="label" alias="label.txt,label" type="cstr" is-prop="true" is-computed="false">No description provided</item><item name="label.align.pos" alias="label.align.pos" type="raw" subtype="fl_align_pos" is-prop="true" is-computed="false">No description provided</item><item name="label.align.img" alias="label.align.img" type="raw" subtype="fl_align_image" is-prop="true" is-computed="false">No description provided</item><item name="label.align.wrap" alias="label.align.wrap" type="raw" subtype="fl_align_wrap" is-prop="true" is-computed="false">No description provided</item><item name="label.align.clip" alias="label.align.clip" type="raw" subtype="fl_align_clip" is-prop="true" is-computed="false">No description provided</item><item name="label.align.inside" alias="label.align.inside" type="raw" subtype="fl_align_inside" is-prop="true" is-computed="false">No description provided</item><item name="label.size" alias="label.size" type="raw" is-prop="true" is-computed="false">A simple integer value to determine the font size, or 'default' to set the default one.</item><item name="label.colour" alias="label.color,label.colour" type="color" is-prop="true" is-computed="false">No description provided</item><item name="label.margin" alias="label.margin" type="scalar-2" is-prop="true" is-computed="false">Horizontal and vertical margins for the label.</item><item name="label.margin.x" alias="label.margin.x" type="scalar-1" is-prop="true" is-computed="false">Horizontal margin for the label.</item><item name="label.margin.y" alias="label.margin.y" type="scalar-1" is-prop="true" is-computed="false">Vertical margin for the label.</item><item name="tooltip" alias="tooltip.txt,tooltip" type="cstr" is-prop="true" is-computed="false">No description provided</item><item name="box" alias="box,box" type="scalar-4" is-prop="true" is-computed="true">Origin offset (0,1) and size (2,3) for the box.</item><item name="box.x" alias="box.x" type="scalar-1" is-prop="true" is-computed="false">No description provided</item><item name="box.y" alias="box.y" type="scalar-1" is-prop="true" is-computed="false">No description provided</item><item name="box.w" alias="box.width,box.w" type="scalar-1" is-prop="true" is-computed="false">No description provided</item><item name="box.h" alias="box.height,box.h" type="scalar-1" is-prop="true" is-computed="false">No description provided</item><item name="box.style" alias="box.style" type="raw" subtype="fl_boxtype" is-prop="true" is-computed="false">No description provided</item><item name="box.fixed" alias="box.fixed" type="flag" is-prop="true" is-computed="false">If this widget is child of a container like flex, set its box size as fixed</item><item name="bg.colour" alias="bg.color,bg.colour" type="color" is-prop="true" is-computed="false">Colour for both relaxed and selected states</item><item name="bg.colour.relaxed" alias="bg.color.relaxed,bg.colour.relaxed" type="color" is-prop="true" is-computed="false">Colour for the relaxed state</item><item name="bg.colour.selected" alias="bg.color.selected,bg.colour.selected" type="color" is-prop="true" is-computed="false">Colour for the selected state</item><item name="active" alias="active,active" type="flag" is-prop="true" is-computed="true">If true set active (default).</item><item name="active.recursive" type="flag" is-prop="false" is-computed="true">Get back the actual box of the widget</item><item name="show" alias="show" type="flag" is-prop="true" is-computed="false">If true the widget is shown (default).</item><item name="on.callback" alias="on.callback" type="raw" subtype="$symbol" is-prop="true" is-computed="false">Empty string to unset.</item><item name="visible" type="flag" is-prop="false" is-computed="true">Get back the actual box of the widget</item><item name="visible.recursive" type="flag" is-prop="false" is-computed="true">Get back the actual box of the widget</item></fields></component>